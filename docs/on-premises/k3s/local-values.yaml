configuration:
  database:
    username: postgres
    host: postgres.flyte.svc.cluster.local
    dbname: flyteadmin 
  storage:
    type: minio
    metadataContainer: my-s3-bucket #This is the default bucket created with Minio. Controlled by the MINIO_DEFAULT_BUCKETS env var in the local-flyte-resources.yaml manifest
    userDataContainer: my-s3-bucket
    provider: s3
    providerConfig:
      s3:
        region: "us-east-1" #Irrelevant for local but still needed
        authType: "accesskey"
        endpoint: "http://minio.flyte.svc.cluster.local:9000"
        accessKey: "minio"
        secretKey: "miniostorage" #If you need to change this parameters, refer to the local-flyte-resources.yaml manifest and adjust the MINIO_ROOT_PASSWORD env var
        disableSSL: "true"
        secure: "false"

  inlineSecretRef: flyte-binary-inline-config-secret  
  inline:
    plugins:
      k8s:
        inject-finalizer: true
        default-env-vars:
          - FLYTE_AWS_ENDPOINT: "http://minio.flyte.svc.cluster.local:9000"
          - FLYTE_AWS_ACCESS_KEY_ID: "minio"
          - FLYTE_AWS_SECRET_ACCESS_KEY: "miniostorage" #Use the same value as the MINIO_ROOT_PASSWORD
    task_resources:
      defaults: 
        cpu: 100m
        memory: 500Mi #change default requested resources and limits to fit your needs
      limits:
        memory: 2Gi
    storage:
      cache:
        max_size_mbs: 100
        target_gc_percent: 100

serviceAccount:
  create: true

ingress:
 create: true
 commonAnnotations:
  kubernetes.io/ingress.class: nginx
 httpAnnotations:
  nginx.ingress.kubernetes.io/app-root: /console
 grpcAnnotations:
  nginx.ingress.kubernetes.io/backend-protocol: GRPC
 host: <your fqdn>